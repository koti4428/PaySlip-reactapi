// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistence;

namespace Persistence.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5");

            modelBuilder.Entity("Domain.models.employee.Employee", b =>
                {
                    b.Property<int>("employeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<int>("EmployeeContractId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("EmployeePersonalId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("FirstName")
                        .HasColumnType("TEXT");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .HasColumnType("TEXT");

                    b.HasKey("employeeId");

                    b.HasIndex("EmployeeContractId");

                    b.HasIndex("EmployeePersonalId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("Domain.models.employee.EmployeeContract", b =>
                {
                    b.Property<int>("EmployeeContractId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("ContractHours")
                        .HasColumnType("TEXT");

                    b.Property<int>("ContractType")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("KiwiSaver")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("OvertimeRate")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("PerHourPay")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Union")
                        .HasColumnType("INTEGER");

                    b.HasKey("EmployeeContractId");

                    b.ToTable("EmployeeContract");
                });

            modelBuilder.Entity("Domain.models.employee.EmployeePersonal", b =>
                {
                    b.Property<int>("EmployeePersonalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Age")
                        .HasColumnType("INTEGER");

                    b.Property<string>("City")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("TEXT");

                    b.Property<string>("IRD")
                        .HasColumnType("TEXT");

                    b.Property<string>("Phone")
                        .HasColumnType("TEXT");

                    b.HasKey("EmployeePersonalId");

                    b.ToTable("EmployeePersonal");
                });

            modelBuilder.Entity("Domain.models.payslip.Payslip", b =>
                {
                    b.Property<int>("PayslipId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("ContractedEarning")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("ContractedHours")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("TEXT");

                    b.Property<int>("EmpId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("InHandPay")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("KiwiSaver")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("OtherCharges")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("OvertimeEarning")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("OvertimeHours")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("PAYE")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("TotalDeduction")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("TotalEarning")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("TotalHours")
                        .HasColumnType("TEXT");

                    b.Property<int>("UnionFee")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("employeeId")
                        .HasColumnType("INTEGER");

                    b.HasKey("PayslipId");

                    b.HasIndex("employeeId");

                    b.ToTable("Payslips");
                });

            modelBuilder.Entity("Domain.models.employee.Employee", b =>
                {
                    b.HasOne("Domain.models.employee.EmployeeContract", "EmployeeContract")
                        .WithMany()
                        .HasForeignKey("EmployeeContractId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.models.employee.EmployeePersonal", "EmployeePersonal")
                        .WithMany()
                        .HasForeignKey("EmployeePersonalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.models.payslip.Payslip", b =>
                {
                    b.HasOne("Domain.models.employee.Employee", "Employee")
                        .WithMany("PayRecord")
                        .HasForeignKey("employeeId");
                });
#pragma warning restore 612, 618
        }
    }
}
